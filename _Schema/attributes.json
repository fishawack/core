{
	"$schema": "http://json-schema.org/draft-04/schema#",
	"type": "object",
	"definitions": {
		"attributes": {
			"description": "Generally toggles and settings that effect the build rather than the content",
			"type": "object",
            "properties": {
            	"title": {
		        	"type": "string"
	            },
	            "googleTrackingID": {
		        	"type": ["string", "null"]
	            },
	            "root": {
					"description": "The folder where compiled files are placed",
		        	"type": "string"
	            },
				"src": {
					"description": "The folder where source files can be found",
		        	"type": "string"
	            },
	            "repo": {
		        	"type": "string"
	            },
	            "ratio": {
		        	"type": "string",
		        	"enum": ["16:9", "9:16", "4:3", "3:4"]
	            },
	            "code": {
		        	"type": "string"
	            },
	            "design": {
		        	"type": "string"
	            },
	            "prerender": {
	            	"type": "boolean"
	            },
				"cms": {
					"type": "string"
				},
	            "electron": {
	            	"type": ["object", "boolean"],
					"properties": {
						"dependencies": {
							"type": "object",
							"additionalProperties": true
						}
					}
	            },
	            "phonegap": {
					"$ref": "phonegap.json#/definitions/phonegap"
				},
				"capture": {
					"$ref": "pdf.json#/definitions/capture"
				},
				"pdf": {
					"$ref": "pdf.json#/definitions/pdf"
				},
				"handover": {
					"type": "boolean"
				},
				"cegedim": {
					"type": "boolean"
				},
				"veeva": {
					"description": "Veeva specific config",
					"type": ["object", "boolean"],
					"properties": {
						"id": {
							"type": "string",
							"description": "The id of the presentation"
						},
						"presentation": {
							"type": "string",
							"description": "The name of the presentation"
						},
						"start": {
							"type": "string",
							"description": "Optional start date that the presentation is available, format MM/DD/YYYY",
							"pattern": "^(((0)[0-9])|((1)[0-2]))(\/)([0-2][0-9]|(3)[0-1])(\/)\\d{4}$"
						},
						"end": {
							"type": "string",
							"description": "Optional end date that the presentation is available, format MM/DD/YYYY",
							"pattern": "^(((0)[0-9])|((1)[0-2]))(\/)([0-2][0-9]|(3)[0-1])(\/)\\d{4}$"
						},
						"product": {
							"type": "string",
							"description": "The name of the product"
						},
						"country": {
							"type": "string",
							"description": "The target country"
						},
						"disable": {
							"description": "Disables native functionality for all slides",
							"type": "array",
							"items": {
								"type": "string",
								"enum": [
									"Swipe",
									"Rotation Lock"
								]
							}
						},
						"state": {
							"description": "Define the field and object to use in the salesforce database when storing state",
							"type": "object",
							"properties": {
								"object": {
									"description": "The object to store state against",
									"type": "string",
									"enum": [
										"Account",
										"TSF",
										"User",
										"Address",
										"Call",
										"Presentation",
										"KeyMessage",
										"CallObjective"
									]
								},
								"field": {
									"description": "The custom field to store state against. This field should be created as a Text Area (Long) with the maxium length of 131072",
									"type": "string"
								}
							},
							"required": ["object", "field"]
						},
						"sharedResource": {
							"description": "When set to true, any files found in the _Output/shared will be removed from the final build and zipped into a standalone key message for upload to veeva.",
							"type": "boolean",
							"items": {
								"type": "string"
							}
						}
					}
				},
				"vablet": {
					"type": "object",
					"additionalProperties": false,
					"properties": {
						"disableBounce": {
							"type": "boolean"
						},
						"scaleToFitPage": {
							"type": "boolean"
						},
						"hideToolBar": {
							"type": "boolean"
						},
						"disableStatusBar": {
							"type": "boolean"
						},
						"useTransparentBar": {
							"type": "boolean"
						}
					}
				},
	            "email": {
	            	"type": "array",
					"items": { "type": "string" }
	        	},
				"deploy": {
					"$ref": "deploy.json#/definitions/deploy"
				},
				"content": {
					"type": "array",
					"items": {
						"type": ["object", "null"],
						"allOf": [
							{
								"$ref": "deploy.json#/definitions/deploy"
							},
							{
								"type": "object",
								"properties": {
									"ext": {
										"type": ["string", "null"],
										"description": "Which file extension to save the endpoints as. (default: json)",
										"default": "json"
									},
									"bundle": {
										"type": "boolean",
										"description": "Setting this to true will save any endpoint files into a media folder thus bunding them into the front end files when the bundle process is run. (default: false)"
									},
									"endpoints": {
										"type": "array",
							        	"items": {
							        		"type": "string"
							        	},
										"description": "Api endpoints to pull down and save locally. (default: [])"
							        },
							        "saveTo": {
										"type": ["string", "null"],
										"description": "Where to save the pulled files. (default: <%= src %>/content/content-${i}/"
									},
									"api": {
										"type": ["string", "null"],
										"description": "The api endpoint url to point to. (default: /wp-json/wp/v2/)"
									},
									"find": {
										"type": ["string", "null"],
										"description": "Regex used to find media files that need pulling locally. Set to null to disable. (default: ^https.*/wp-content/uploads)"
									}
								}
							}
						]
					}
				},
				"copy": {
					"type": "array",
					"items": {
						"type": "object",
						"properties": {
							"src": {
								"type": ["string", "array", "null"],
								"items": {
									"type": "string"
								}
							},
							"dest": {
								"type": ["string", "array", "null"],
								"items": {
									"type": "string"
								}
							},
							"expand": {"type": "boolean"},
							"cwd": {"type": "string"}
						}
					}
				},
				"modernizr": {
					"type": "array",
					"items": {
						"type": "string"
					}
		        },
		        "env": {
		        	"type": "object",
		        	"additionalProperties": true
		        },
		        "splitChunks": {
		        	"description": "If true will pull out shared javascript librarys to a commons.js file",
		        	"type": "boolean"
		        },
				"transpile": {
					"description": "Specify any node_module libraries to force them to be transpiled by babel",
					"type": "array",
					"items": {
						"type": "string"
					}
				},
		        "template": {
		        	"type": "object",
	    			"patternProperties": {
        				".*": {
        					"type": "object",
        					"properties": {
        						"location": {
        							"description": "Json file to load, defaults to content.json",
        							"type": "string"
        						},
				                "jsonPath": {
				                	"description": "Dot notation path to array of elements",
				                	"type": "string"
				                },
				                "partial": {
				                	"type": "string"
				                }
        					},
        					"required": ["partial"]
        				}
        			}
		        },
		        "toggle": {
		        	"type": "object",
		        	"additionalProperties": true
				},
				"targets": {
					"type": "object",
					"patternProperties": {
						".*": {
							"$ref": "attributes.json#/definitions/attributes"
						}
						
					}
				}
            }
		}
	}
}